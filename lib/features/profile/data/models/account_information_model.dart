import 'package:peanut_app/features/profile/domain/entities/account_information_entity.dart';

class AccountInformationModel extends AccountInformationEntity {
  const AccountInformationModel({
    required super.address,
    required super.balance,
    required super.city,
    required super.country,
    required super.currency,
    required super.currentTradesCount,
    required super.currentTradesVolume,
    required super.equity,
    required super.freeMargin,
    required super.isAnyOpenTrades,
    required super.isSwapFree,
    required super.leverage,
    required super.name,
    required super.phone,
    required super.totalTradesCount,
    required super.totalTradesVolume,
    required super.type,
    required super.verificationLevel,
    required super.zipCode,
  });

  AccountInformationModel copyWith({
    String? address,
    double? balance,
    String? city,
    String? country,
    int? currency,
    int? currentTradesCount,
    double? currentTradesVolume,
    double? equity,
    double? freeMargin,
    bool? isAnyOpenTrades,
    bool? isSwapFree,
    int? leverage,
    String? name,
    String? phone,
    int? totalTradesCount,
    double? totalTradesVolume,
    int? type,
    int? verificationLevel,
    String? zipCode,
  }) =>
      AccountInformationModel(
        address: address ?? this.address,
        balance: balance ?? this.balance,
        city: city ?? this.city,
        country: country ?? this.country,
        currency: currency ?? this.currency,
        currentTradesCount: currentTradesCount ?? this.currentTradesCount,
        currentTradesVolume: currentTradesVolume ?? this.currentTradesVolume,
        equity: equity ?? this.equity,
        freeMargin: freeMargin ?? this.freeMargin,
        isAnyOpenTrades: isAnyOpenTrades ?? this.isAnyOpenTrades,
        isSwapFree: isSwapFree ?? this.isSwapFree,
        leverage: leverage ?? this.leverage,
        name: name ?? this.name,
        phone: phone ?? this.phone,
        totalTradesCount: totalTradesCount ?? this.totalTradesCount,
        totalTradesVolume: totalTradesVolume ?? this.totalTradesVolume,
        type: type ?? this.type,
        verificationLevel: verificationLevel ?? this.verificationLevel,
        zipCode: zipCode ?? this.zipCode,
      );

  factory AccountInformationModel.init() => const AccountInformationModel(
        address: '',
        balance: 0.0,
        city: '',
        country: '',
        currency: 0,
        currentTradesCount: 0,
        currentTradesVolume: 0.0,
        equity: 0.0,
        freeMargin: 0.0,
        isAnyOpenTrades: false,
        isSwapFree: false,
        leverage: 0,
        name: '',
        phone: '',
        totalTradesCount: 0,
        totalTradesVolume: 0.0,
        type: 0,
        verificationLevel: 0,
        zipCode: '',
      );

  factory AccountInformationModel.fromJson(Map<String, dynamic> json) =>
      AccountInformationModel(
        address: json["address"]??'',
        balance: json["balance"]?.toDouble()??0.0,
        city: json["city"]??'',
        country: json["country"]??'',
        currency: json["currency"]??0,
        currentTradesCount: json["currentTradesCount"]??0,
        currentTradesVolume: json["currentTradesVolume"]?.toDouble()??0.0,
        equity: json["equity"]?.toDouble()??0.0,
        freeMargin: json["freeMargin"]?.toDouble()??0.0,
        isAnyOpenTrades: json["isAnyOpenTrades"]??false,
        isSwapFree: json["isSwapFree"]??false,
        leverage: json["leverage"]??0,
        name: json["name"]??'',
        phone: json["phone"]??'',
        totalTradesCount: json["totalTradesCount"]??0,
        totalTradesVolume: json["totalTradesVolume"]?.toDouble()??0.0,
        type: json["type"]??0,
        verificationLevel: json["verificationLevel"]??0,
        zipCode: json["zipCode"]??'',
      );
}
